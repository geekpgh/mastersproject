@model IEnumerable<BrewersBuddy.Models.UserProfile>

@{
    ViewBag.Title = "SearchIndex";
}

<p style="color:blue;font-size:x-large"><b>Enter one of the following search criteria.</b><br></p>

@if ((!(bool)TempData["FirstLoad"]) & !(Model.Any()))
        {
            <div class="firstLoad">
                <p style="color:red;font-size:x-large"> No Results Found. </p>
            </div>
        }

    @using (Html.BeginForm("SearchIndex", "Account", FormMethod.Get))
    {    
        <p>
              Username: @Html.TextBox("username", "") <br>   
              First Name: @Html.TextBox("firstname", "") <br>   
              Last Name: @Html.TextBox("lastname", "") <br>   
              Zip Code: @Html.TextBox("zip", "") <br>   
              <input type="submit" value="Search"  />
        </p>
    } 

@if(Model.Any())
    {
        <br>
        switch ((string)TempData["Criteria"])
        {
            case ("1"):
                {
                    <h2>Username Search Results</h2>
                    break;
                }
            case ("2"):
                {
                    <h2>First Name Search Results</h2>
                    break;
                }
            case ("3"):
                {
                    <h2>Last Name Search Results</h2>
                    break;
                }
            case ("4"):
                {
                    <h2>Zip Code Search Results</h2>
                    break;
                }
        }

    }

<table>
    @if(Model.Any())
    {
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.UserName)
        </th>
        <th></th>
        <th>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            @Html.DisplayNameFor(model => model.FirstName)
        </th>
        <th></th>
        <th>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            @Html.DisplayNameFor(model => model.LastName)
        </th>
        <th></th>
        <th>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            @Html.DisplayNameFor(model => model.Email)
        </th>
        <th></th>
    </tr>
    }

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.UserName)
        </td>
        <td></td>
        <td>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            @Html.DisplayFor(modelItem => item.FirstName)
        </td>        
        <td></td>
        <td>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            @Html.DisplayFor(modelItem => item.LastName)
        </td>        
        <td></td>
        <td>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            @Html.DisplayFor(modelItem => item.Email)
        </td>
    </tr>
}
</table>


<br><p>
     @Html.ActionLink("Back", "..")
</p>
